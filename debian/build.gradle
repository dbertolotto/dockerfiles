ext {
  arch = 'amd64'
  var = 'minbase'
  ver = "stretch"
  excl = 'none'
  tmpchr = 'tmpchr'
  tmpdocker = 'docker'
  tmpfile = 'tmpfile.tar'
  builddir = buildDir.absolutePath + '/' + ver
  templateDir = 'template'
}

task copyBuild (type: Copy) {
  from templateDir + '/build.template'
  into buildDir.absolutePath + '/' + ver
  rename { file -> 'build' }
  expand(architecture: arch, variant: var, version: ver, exclude: excl, tempchroot: tmpchr, tempfile: tmpfile)
}

task chrBuild (type: Exec) {
  workingDir builddir
  commandLine 'bash','build'
}

task copyDocker (type: Copy) {
  from templateDir + './Dockerfile.template'
  into buildDir.absolutePath + '/' + ver
  rename { file -> 'Dockerfile' }
  expand(file: tmpfile)
}

task build (type: GradleBuild) {
  tasks = ['copyBuild','chrBuild',]
}

task dockerBuild (type: GradleBuild) {
  tasks = ['build','copyDocker']
}

task clean (type:Delete) {
  delete buildDir
}
