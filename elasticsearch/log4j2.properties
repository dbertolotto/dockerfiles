#
# Elasticsearch exposes three properties:
# ${sys:es.logs.base_path}
# ${sys:es.logs.cluster_name}
# ${sys:es.logs.node_name} (if the node name is explicitly set via node.name)
#
### Configure rolling file appender
appender.rolling.type = RollingFile 
appender.rolling.name = rolling
### Log file name
appender.rolling.fileName = ${sys:es.logs.base_path}${sys:file.separator}${sys:es.logs.cluster_name}.log 
### Rollerd log file pattern
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %.-10000m%n
appender.rolling.filePattern = ${sys:es.logs.base_path}${sys:file.separator}${sys:es.logs.cluster_name}-%d{yyyy-MM-dd}-%i.log.gz 
### Rolling policies
appender.rolling.policies.type = Policies
# Use a time-based rolling policy
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy 
# Time interval in days
appender.rolling.policies.time.interval = 1 
# Align on day boundary (as opposed to rolling every twenty-four hours)
appender.rolling.policies.time.modulate = true 
# Use a size-base rolling policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy 
# Max file size
appender.rolling.policies.size.size = 256MB 
### Rolling strategy
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.fileIndex = nomax
# Delete when rolling logs
appender.rolling.strategy.action.type = Delete 
appender.rolling.strategy.action.basepath = ${sys:es.logs.base_path}
# Delete logs matching a pattern
appender.rolling.strategy.action.condition.type = IfFileName 
# Only delete main logs
appender.rolling.strategy.action.condition.glob = ${sys:es.logs.cluster_name}-* 
# Delete only if too many compressed logs have been accumulated
appender.rolling.strategy.action.condition.nested_condition.type = IfAccumulatedFileSize 
appender.rolling.strategy.action.condition.nested_condition.exceeds = 2GB
